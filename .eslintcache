[{"/home/opor/hasan/ajaib/chart/src/index.js":"1","/home/opor/hasan/ajaib/chart/src/App.js":"2","/home/opor/hasan/ajaib/chart/src/reportWebVitals.js":"3","/home/opor/hasan/ajaib/chart/src/Components/Scatterplot/index.js":"4","/home/opor/hasan/ajaib/chart/src/Components/Histogram/index.js":"5","/home/opor/hasan/ajaib/chart/src/Components/BraChart/index.js":"6","/home/opor/hasan/ajaib/chart/src/Components/Pie/index.js":"7","/home/opor/hasan/ajaib/chart/src/Components/Force/forceGraph.js":"8","/home/opor/hasan/ajaib/chart/src/Components/Force/forceGraphGenerator.js":"9"},{"size":500,"mtime":1610844362290,"results":"10","hashOfConfig":"11"},{"size":1716,"mtime":1610946907772,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610844362290,"results":"13","hashOfConfig":"11"},{"size":1716,"mtime":1610853929240,"results":"14","hashOfConfig":"11"},{"size":1389,"mtime":1610849043284,"results":"15","hashOfConfig":"11"},{"size":1401,"mtime":1610848584867,"results":"16","hashOfConfig":"11"},{"size":1519,"mtime":1610850184023,"results":"17","hashOfConfig":"11"},{"size":600,"mtime":1610946586877,"results":"18","hashOfConfig":"11"},{"size":3894,"mtime":1610946780382,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"15t76np",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/opor/hasan/ajaib/chart/src/index.js",[],["43","44"],"/home/opor/hasan/ajaib/chart/src/App.js",["45","46"],"/home/opor/hasan/ajaib/chart/src/reportWebVitals.js",[],"/home/opor/hasan/ajaib/chart/src/Components/Scatterplot/index.js",["47","48"],"import React, { createRef, useEffect } from \"react\";\nimport { scaleLinear, max, axisLeft, axisBottom, select } from \"d3\";\n\nconst RenderCircles = ({ data, scale }) => {\n  const renderCircles = data.map((coords, i) => (\n    <circle\n      cx={scale.x(coords[0])}\n      cy={scale.y(coords[1])}\n      r=\"8\"\n      style={{ fill: \"rgba(25, 158, 199, .9)\" }}\n      key={i}\n    />\n  ));\n\n  return <g>{renderCircles}</g>;\n};\n\nconst Axis = ({ axis, scale }) => {\n  const node = createRef(axis);\n\n  useEffect(() => {\n    if (node.current) {\n      select(node.current).call(scale);\n    }\n  }, [node]);\n\n  return <g ref={node} />;\n};\n\nexport default ({ data }) => {\n  const margin = { top: 20, right: 15, bottom: 60, left: 60 };\n  const width = 800 - margin.left - margin.right;\n  const height = 600 - margin.top - margin.bottom;\n\n  const x = scaleLinear()\n    .domain([\n      0,\n      max(data, function (d) {\n        return d[0];\n      }),\n    ])\n    .range([0, width]);\n\n  const y = scaleLinear()\n    .domain([\n      0,\n      max(data, function (d) {\n        return d[1];\n      }),\n    ])\n    .range([height, 0]);\n\n  return (\n    <svg\n      width={width + margin.right + margin.left}\n      height={height + margin.top + margin.bottom}\n      className=\"chart\"\n    >\n      <g\n        transform={\"translate(\" + margin.left + \",\" + margin.top + \")\"}\n        width={width}\n        height={height}\n        className=\"main\"\n      >\n        <RenderCircles data={data} scale={{ x, y }} />\n        <Axis\n          axis=\"x\"\n          transform={\"translate(0,\" + height + \")\"}\n          scale={axisBottom().scale(x)}\n        />\n        <Axis axis=\"y\" transform=\"translate(0,0)\" scale={axisLeft().scale(y)} />\n      </g>\n    </svg>\n  );\n};\n","/home/opor/hasan/ajaib/chart/src/Components/Histogram/index.js",["49","50"],"import React, { useEffect, createRef, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nexport default () => {\n  const refChart = createRef(null);\n  useEffect(() => {\n    if (refChart && refChart.current) {\n      const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n      const w = 600;\n      const h = 300;\n      const svg = d3\n        .select(refChart.current)\n        .append(\"svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .attr(\"class\", \"bar\");\n      svg\n        .selectAll(\"rect\")\n        .data(dataset)\n        .enter()\n        .append(\"rect\")\n        .attr(\"fill\", \"navy\")\n        .attr(\"class\", \"sBar\")\n        .attr(\"x\", (d, i) => i * 60)\n        .attr(\"y\", (d, i) => {\n          return h - 7 * d;\n        })\n        .attr(\"width\", 50)\n        .attr(\"height\", (d, i) => 7 * d)\n        .append(\"title\")\n        .text((d) => d);\n      svg\n        .selectAll(\"text\")\n        .data(dataset)\n        .enter()\n        .append(\"text\")\n        .style(\"font-size\", 18)\n        .attr(\"fill\", \"red\")\n        .attr(\"x\", (d, i) => i * 60)\n        .attr(\"y\", (d, i) => h - 7 * d - 3)\n        .text((d) => d);\n    }\n  }, [refChart]);\n\n  const styles = {\n    container: {\n      display: \"grid\",\n      justifyItems: \"center\",\n    },\n  };\n\n  return (\n    <div ref={refChart} style={styles.container}>\n      <h1 style={{ textAlign: \"center\" }}>Histogram</h1>\n    </div>\n  );\n};\n","/home/opor/hasan/ajaib/chart/src/Components/BraChart/index.js",["51","52"],"import React, { useEffect, createRef, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nexport default () => {\n  const refChart = createRef(null);\n  useEffect(() => {\n    if (refChart && refChart.current) {\n      const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];\n      const w = 600;\n      const h = 300;\n      const svg = d3\n        .select(refChart.current)\n        .append(\"svg\")\n        .attr(\"width\", w)\n        .attr(\"height\", h)\n        .attr(\"class\", \"bar\");\n      svg\n        .selectAll(\"rect\")\n        .data(dataset)\n        .enter()\n        .append(\"rect\")\n        .attr(\"fill\", \"navy\")\n        .attr(\"class\", \"sBar\")\n        .attr(\"x\", (d, i) => i * 60)\n        .attr(\"y\", (d, i) => {\n          return h - 7 * d;\n        })\n        .attr(\"width\", 50)\n        .attr(\"height\", (d, i) => 7 * d)\n        .append(\"title\")\n        .text((d) => d);\n      svg\n        .selectAll(\"text\")\n        .data(dataset)\n        .enter()\n        .append(\"text\")\n        .style(\"font-size\", 18)\n        .attr(\"fill\", \"red\")\n        .attr(\"x\", (d, i) => i * 60)\n        .attr(\"y\", (d, i) => h - 7 * d - 3)\n        .text((d) => d);\n    }\n  }, [refChart]);\n\n  const styles = {\n    container: {\n      display: \"grid\",\n      justifyItems: \"center\",\n    },\n  };\n\n  return (\n    <div ref={refChart} style={styles.container}>\n      <h1 style={{ textAlign: \"center\" }}>Hi, I'm the bar chart</h1>\n    </div>\n  );\n};\n","/home/opor/hasan/ajaib/chart/src/Components/Pie/index.js",["53"],"import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\n\nconst Pie = (props) => {\n  const ref = useRef(null);\n  const createPie = d3\n    .pie()\n    .value((d) => d.value)\n    .sort(null);\n  const createArc = d3\n    .arc()\n    .innerRadius(props.innerRadius)\n    .outerRadius(props.outerRadius);\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format(\".2f\");\n\n  useEffect(() => {\n    const data = createPie(props.data);\n    const group = d3.select(ref.current);\n    const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n    groupWithData.exit().remove();\n\n    const groupWithUpdate = groupWithData\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    const path = groupWithUpdate\n      .append(\"path\")\n      .merge(groupWithData.select(\"path.arc\"));\n\n    path\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", createArc)\n      .attr(\"fill\", (d, i) => colors(i));\n\n    const text = groupWithUpdate\n      .append(\"text\")\n      .merge(groupWithData.select(\"text\"));\n\n    text\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"alignment-baseline\", \"middle\")\n      .attr(\"transform\", (d) => `translate(${createArc.centroid(d)})`)\n      .style(\"fill\", \"white\")\n      .style(\"font-size\", 10)\n      .text((d) => format(d.value));\n  }, [props.data]);\n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g\n        ref={ref}\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\n      />\n    </svg>\n  );\n};\n\nexport default Pie;\n","/home/opor/hasan/ajaib/chart/src/Components/Force/forceGraph.js",["54","55"],"/home/opor/hasan/ajaib/chart/src/Components/Force/forceGraphGenerator.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":12},{"ruleId":"60","severity":1,"message":"64","line":6,"column":8,"nodeType":"62","messageId":"63","endLine":6,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":25,"column":6,"nodeType":"67","endLine":25,"endColumn":12,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":30,"column":1,"nodeType":"71","endLine":75,"endColumn":3},{"ruleId":"60","severity":1,"message":"72","line":1,"column":39,"nodeType":"62","messageId":"63","endLine":1,"endColumn":45},{"ruleId":"69","severity":1,"message":"70","line":4,"column":1,"nodeType":"71","endLine":57,"endColumn":3},{"ruleId":"60","severity":1,"message":"72","line":1,"column":39,"nodeType":"62","messageId":"63","endLine":1,"endColumn":45},{"ruleId":"69","severity":1,"message":"70","line":4,"column":1,"nodeType":"71","endLine":57,"endColumn":3},{"ruleId":"65","severity":1,"message":"73","line":49,"column":6,"nodeType":"67","endLine":49,"endColumn":18,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"75","line":5,"column":1,"nodeType":"71","endLine":25,"endColumn":2},{"ruleId":"65","severity":1,"message":"76","line":22,"column":6,"nodeType":"67","endLine":22,"endColumn":8,"suggestions":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Histogram' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scale'. Either include it or remove the dependency array.","ArrayExpression",["80"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'colors', 'createArc', 'createPie', and 'format'. Either include them or remove the dependency array.",["81"],"Unexpected default export of anonymous function","React Hook React.useEffect has missing dependencies: 'linksData', 'nodeHoverTooltip', and 'nodesData'. Either include them or remove the dependency array.",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [node, scale]",{"range":"89","text":"90"},"Update the dependencies array to be: [colors, createArc, createPie, format, props.data]",{"range":"91","text":"92"},"Update the dependencies array to be: [linksData, nodeHoverTooltip, nodesData]",{"range":"93","text":"94"},[580,586],"[node, scale]",[1289,1301],"[colors, createArc, createPie, format, props.data]",[526,528],"[linksData, nodeHoverTooltip, nodesData]"]